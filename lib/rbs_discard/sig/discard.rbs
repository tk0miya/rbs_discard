module Discard
  module Model
    module ClassMethods
      type callback = Symbol | ^() [self: instance] -> void

      def discard_column: () -> Symbol
      def discard_column=: (Symbol) -> Symbol

      def before_discard: (*callback) ? { () [self: instance] -> void } -> void
      def after_discard: (*callback) ? { () [self: instance] -> void } -> void
      def discard_all: () -> void
      def discard_all!: () -> void
      def undiscard_all: () -> void
      def undiscard_all!: () -> void
    end

    module Relation
      def kept: () -> self
      def undiscarded: () -> self
      def discarded: () -> self
      def with_discarded: () -> self
      def discard_all: () -> void
      def discard_all!: () -> void
      def undiscard_all: () -> void
      def undiscard_all!: () -> void
    end

    def discard_column: () -> Symbol
    def discard_column=: (Symbol) -> Symbol

    def discard: () -> bool
    def discard!: () -> void
    def discarded?: () -> bool
    def undiscarded?: () -> bool
    def kept?: () -> bool
  end
end
